#! /usr/bin/env python

import pnt, sys, optparse, re, math

usage = 'pkz-to-mesh PKZFILE > file.mesh'

parser = optparse.OptionParser(usage)

parser.add_option('--nodata',
                  help='the z value to use for points where there is no data',
                  dest='nodata', type="float", default=-100)


(opts, args) = parser.parse_args()

if len(args) != 1:
    print usage
    sys.exit(-1)

input_pkz_file = args[0]

g = pnt.PntGrid.load_pkzfile(input_pkz_file)

print "MESH"
print "%1d %1d" % (g.width, g.height)
for i in range(0,g.height):
    for j in range(0,g.width):
        print "%.2f %.2f %.2f" % (g.xTr.int_to_float(j),g.yTr.int_to_float(i),opts.nodata if math.isnan(g.a[i,j]) else g.a[i,j])

## print "contouring"
## 
## plt.figure()
## 
## V = [ 5*x/9 for x in [-9999, -1.5, -1.0, -0.5, 0.0, 0.5, 1.0, 1.5, 9999] ]
## 
## CS = plt.contourf(g.a, V)
## 
## collections = CS.collections
## levels = CS.levels               # NOTE: len(collections) = len(levels)
## 
## polylists = []
## for coll in collections:
##     plist = []
##     for p in coll.get_paths():
##         p.simplify_threshold = 0.0
##         plist = plist + p.to_polygons()
##     polylists.append(plist)
## 
## ## for writing a geomview OFF file:
## ##
## ## gtmp = pnt.PntGrid()
## ## off = off.Off()
## ## for i in range(0,len(collections)):
## ##     level    = CS.levels[i]
## ##     for polygon in polylists[i]:
## ##         face = []
## ##         for p in polygon:
## ##             face.append([ gtmp.xTr.int_to_float(p[0]), gtmp.yTr.int_to_float(p[1]), level ])
## ##         off.add_face(face)
## ## off.write(output_file_base + ".off")
## 
## fclist = []
## for i in range(0,len(collections)):
##     fc = geojson.FeatureCollection()
##     level = CS.levels[i]
##     fc.features.append(geojson.MultiPolygonFeature("level-%1d" % i, "level-%1d" % i, polylists[i]))
##     fclist.append(fc)
## 
## 
## output_file_base = re.sub(r'\.pkz$', '', input_pkz_file)
## output_file = "%s.contours.json" % output_file_base
## 
## with open(output_file, "w") as f:
##     f.write("[\n")
##     for i in range(0,len(fclist)):
##         fc = fclist[i]
##         f.write("{\"level\":\"%02d\",\"featureCollection\":%s}%s\n" % (i, fclist[i].toString(), 
##                                                                        ("," if i<(len(fclist)-1) else "")))
##     f.write("]\n")
## print "wrote %s" % output_file
